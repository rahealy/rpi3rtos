
task0.elf:     file format elf64-littleaarch64
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000000040

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .task_list_item 00000030  0000000000000000  0000000000000000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f34  0000000000000030  0000000000000030  00001030  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .vectors      00000828  0000000000001000  0000000000001000  00002000  2**11
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000037a  0000000000001828  0000000000001828  00002828  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .task_header  00000040  0000000000002000  0000000000002000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  5 .got          00000038  0000000000002040  0000000000002040  00003040  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00009f80  0000000000002080  0000000000002080  00003078  2**12
                  ALLOC

Disassembly of section .text:

0000000000000030 <reset>:
  30:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
  34:	9120a000 	add	x0, x0, #0x828
  38:	140001de 	b	7b0 <uart_puts>
  3c:	d503201f 	nop

0000000000000040 <start>:
  40:	a9be7bfd 	stp	x29, x30, [sp, #-32]!
  44:	910003fd 	mov	x29, sp
  48:	a90153f3 	stp	x19, x20, [sp, #16]
  4c:	b0000013 	adrp	x19, 1000 <__exception_vectors_start>
  50:	d0000014 	adrp	x20, 2000 <task0_header>
  54:	9120a273 	add	x19, x19, #0x828
  58:	9101c260 	add	x0, x19, #0x70
  5c:	940001d5 	bl	7b0 <uart_puts>
  60:	9102a260 	add	x0, x19, #0xa8
  64:	940001d3 	bl	7b0 <uart_puts>
  68:	f9402a94 	ldr	x20, [x20, #80]
  6c:	91480294 	add	x20, x20, #0x200, lsl #12
  70:	aa1403e0 	mov	x0, x20
  74:	9400022f 	bl	930 <uart_u64hex_s>
  78:	9103a260 	add	x0, x19, #0xe8
  7c:	940001cd 	bl	7b0 <uart_puts>
  80:	d518c014 	msr	vbar_el1, x20
  84:	9103c260 	add	x0, x19, #0xf0
  88:	940001ca 	bl	7b0 <uart_puts>
  8c:	d2803e80 	mov	x0, #0x1f4                 	// #500
  90:	94000268 	bl	a30 <timer_init_core0>
  94:	d50342ff 	msr	daifclr, #0x2
  98:	91046260 	add	x0, x19, #0x118
  9c:	940001c5 	bl	7b0 <uart_puts>
  a0:	d503205f 	wfe
  a4:	d503205f 	wfe
  a8:	17fffffe 	b	a0 <start+0x60>
  ac:	d503201f 	nop

00000000000000b0 <task0_panic>:
  b0:	d503205f 	wfe
  b4:	17ffffff 	b	b0 <task0_panic>

00000000000000b8 <main>:
  b8:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
  bc:	9120a000 	add	x0, x0, #0x828
  c0:	9100e000 	add	x0, x0, #0x38
  c4:	140001bb 	b	7b0 <uart_puts>

00000000000000c8 <current_el0_irq>:
  c8:	d65f03c0 	ret
  cc:	d503201f 	nop

00000000000000d0 <current_el0_fiq>:
  d0:	d65f03c0 	ret
  d4:	d503201f 	nop

00000000000000d8 <current_elx_irq>:
  d8:	d2800680 	mov	x0, #0x34                  	// #52
  dc:	f2a80000 	movk	x0, #0x4000, lsl #16
  e0:	b9400000 	ldr	w0, [x0]
  e4:	37f80040 	tbnz	w0, #31, ec <current_elx_irq+0x14>
  e8:	d65f03c0 	ret
  ec:	d2800701 	mov	x1, #0x38                  	// #56
  f0:	52b80002 	mov	w2, #0xc0000000            	// #-1073741824
  f4:	f2a80001 	movk	x1, #0x4000, lsl #16
  f8:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
  fc:	9125c000 	add	x0, x0, #0x970
 100:	b9000022 	str	w2, [x1]
 104:	140001ab 	b	7b0 <uart_puts>

0000000000000108 <current_elx_fiq>:
 108:	d65f03c0 	ret
 10c:	d503201f 	nop

0000000000000110 <lower_aarch64_irq>:
 110:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
 114:	9125c000 	add	x0, x0, #0x970
 118:	91008000 	add	x0, x0, #0x20
 11c:	140001a5 	b	7b0 <uart_puts>

0000000000000120 <lower_aarch64_fiq>:
 120:	d65f03c0 	ret
 124:	d503201f 	nop

0000000000000128 <lower_aarch32_irq>:
 128:	d65f03c0 	ret
 12c:	d503201f 	nop

0000000000000130 <lower_aarch32_fiq>:
 130:	d65f03c0 	ret
 134:	00000000 	.inst	0x00000000 ; undefined

0000000000000138 <current_el0_synchronous>:
 138:	d65f03c0 	ret
 13c:	d503201f 	nop

0000000000000140 <current_el0_serror>:
 140:	d65f03c0 	ret
 144:	d503201f 	nop

0000000000000148 <current_elx_synchronous>:
 148:	d65f03c0 	ret
 14c:	d503201f 	nop

0000000000000150 <current_elx_serror>:
 150:	d65f03c0 	ret
 154:	d503201f 	nop

0000000000000158 <lower_aarch64_synchronous>:
 158:	d65f03c0 	ret
 15c:	d503201f 	nop

0000000000000160 <lower_aarch64_serror>:
 160:	d65f03c0 	ret
 164:	d503201f 	nop

0000000000000168 <lower_aarch32_synchronous>:
 168:	d65f03c0 	ret
 16c:	d503201f 	nop

0000000000000170 <lower_aarch32_serror>:
 170:	d65f03c0 	ret
 174:	00000000 	.inst	0x00000000 ; undefined

0000000000000178 <mmu_print_range>:
 178:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
 17c:	910003fd 	mov	x29, sp
 180:	a90153f3 	stp	x19, x20, [sp, #16]
 184:	aa0203f4 	mov	x20, x2
 188:	b0000013 	adrp	x19, 1000 <__exception_vectors_start>
 18c:	9126c273 	add	x19, x19, #0x9b0
 190:	a9025bf5 	stp	x21, x22, [sp, #32]
 194:	d1000456 	sub	x22, x2, #0x1
 198:	aa0003f5 	mov	x21, x0
 19c:	f9001bf7 	str	x23, [sp, #48]
 1a0:	aa0103f7 	mov	x23, x1
 1a4:	940001c3 	bl	8b0 <uart_u64hex>
 1a8:	aa1303e0 	mov	x0, x19
 1ac:	94000181 	bl	7b0 <uart_puts>
 1b0:	aa1703e0 	mov	x0, x23
 1b4:	940001bf 	bl	8b0 <uart_u64hex>
 1b8:	91002260 	add	x0, x19, #0x8
 1bc:	9400017d 	bl	7b0 <uart_puts>
 1c0:	8b1502c0 	add	x0, x22, x21
 1c4:	9ad40800 	udiv	x0, x0, x20
 1c8:	940001ba 	bl	8b0 <uart_u64hex>
 1cc:	aa1303e0 	mov	x0, x19
 1d0:	94000178 	bl	7b0 <uart_puts>
 1d4:	8b1702c0 	add	x0, x22, x23
 1d8:	9ad40800 	udiv	x0, x0, x20
 1dc:	940001b5 	bl	8b0 <uart_u64hex>
 1e0:	91004260 	add	x0, x19, #0x10
 1e4:	a94153f3 	ldp	x19, x20, [sp, #16]
 1e8:	a9425bf5 	ldp	x21, x22, [sp, #32]
 1ec:	f9401bf7 	ldr	x23, [sp, #48]
 1f0:	a8c47bfd 	ldp	x29, x30, [sp], #64
 1f4:	1400016f 	b	7b0 <uart_puts>

00000000000001f8 <mmu_enable_level_3_table_rw_blks>:
 1f8:	8b020022 	add	x2, x1, x2
 1fc:	eb02003f 	cmp	x1, x2
 200:	540001c2 	b.cs	238 <mmu_enable_level_3_table_rw_blks+0x40>  // b.hs, b.nlast
 204:	d0000004 	adrp	x4, 2000 <task0_header>
 208:	8b002423 	add	x3, x1, x0, lsl #9
 20c:	d280e0e5 	mov	x5, #0x707                 	// #1799
 210:	f9402c84 	ldr	x4, [x4, #88]
 214:	f2e00405 	movk	x5, #0x20, lsl #48
 218:	8b0130a0 	add	x0, x5, x1, lsl #12
 21c:	8b0230a2 	add	x2, x5, x2, lsl #12
 220:	8b030c81 	add	x1, x4, x3, lsl #3
 224:	d503201f 	nop
 228:	f8008420 	str	x0, [x1], #8
 22c:	91400400 	add	x0, x0, #0x1, lsl #12
 230:	eb02001f 	cmp	x0, x2
 234:	54ffffa1 	b.ne	228 <mmu_enable_level_3_table_rw_blks+0x30>  // b.any
 238:	d65f03c0 	ret
 23c:	d503201f 	nop

0000000000000240 <mmu_enable_level_3_table_rox_blks>:
 240:	8b020022 	add	x2, x1, x2
 244:	eb02003f 	cmp	x1, x2
 248:	540001c2 	b.cs	280 <mmu_enable_level_3_table_rox_blks+0x40>  // b.hs, b.nlast
 24c:	d0000004 	adrp	x4, 2000 <task0_header>
 250:	8b002423 	add	x3, x1, x0, lsl #9
 254:	d374cc20 	lsl	x0, x1, #12
 258:	d374cc42 	lsl	x2, x2, #12
 25c:	f9402c81 	ldr	x1, [x4, #88]
 260:	911e1c00 	add	x0, x0, #0x787
 264:	911e1c42 	add	x2, x2, #0x787
 268:	8b030c21 	add	x1, x1, x3, lsl #3
 26c:	d503201f 	nop
 270:	f8008420 	str	x0, [x1], #8
 274:	91400400 	add	x0, x0, #0x1, lsl #12
 278:	eb02001f 	cmp	x0, x2
 27c:	54ffffa1 	b.ne	270 <mmu_enable_level_3_table_rox_blks+0x30>  // b.any
 280:	d65f03c0 	ret
 284:	d503201f 	nop

0000000000000288 <mmu_enable_level_3_table>:
 288:	a9ba7bfd 	stp	x29, x30, [sp, #-96]!
 28c:	910003fd 	mov	x29, sp
 290:	a9046bf9 	stp	x25, x26, [sp, #64]
 294:	913ffc39 	add	x25, x1, #0xfff
 298:	913ffc5a 	add	x26, x2, #0xfff
 29c:	a9025bf5 	stp	x21, x22, [sp, #32]
 2a0:	aa0003f5 	mov	x21, x0
 2a4:	aa0103f6 	mov	x22, x1
 2a8:	a90363f7 	stp	x23, x24, [sp, #48]
 2ac:	b0000018 	adrp	x24, 1000 <__exception_vectors_start>
 2b0:	aa0203f7 	mov	x23, x2
 2b4:	f9002bfb 	str	x27, [sp, #80]
 2b8:	9126c31b 	add	x27, x24, #0x9b0
 2bc:	91006360 	add	x0, x27, #0x18
 2c0:	a90153f3 	stp	x19, x20, [sp, #16]
 2c4:	d34cff34 	lsr	x20, x25, #12
 2c8:	9400013a 	bl	7b0 <uart_puts>
 2cc:	8b5a3293 	add	x19, x20, x26, lsr #12
 2d0:	f13fff3f 	cmp	x25, #0xfff
 2d4:	d36aa6b9 	lsl	x25, x21, #22
 2d8:	540008a8 	b.hi	3ec <mmu_enable_level_3_table+0x164>  // b.pmore
 2dc:	f13fff5f 	cmp	x26, #0xfff
 2e0:	54000568 	b.hi	38c <mmu_enable_level_3_table+0x104>  // b.pmore
 2e4:	f108027f 	cmp	x19, #0x200
 2e8:	54000101 	b.ne	308 <mmu_enable_level_3_table+0x80>  // b.any
 2ec:	a94153f3 	ldp	x19, x20, [sp, #16]
 2f0:	a9425bf5 	ldp	x21, x22, [sp, #32]
 2f4:	a94363f7 	ldp	x23, x24, [sp, #48]
 2f8:	a9446bf9 	ldp	x25, x26, [sp, #64]
 2fc:	f9402bfb 	ldr	x27, [sp, #80]
 300:	a8c67bfd 	ldp	x29, x30, [sp], #96
 304:	d65f03c0 	ret
 308:	9126c318 	add	x24, x24, #0x9b0
 30c:	91014300 	add	x0, x24, #0x50
 310:	94000128 	bl	7b0 <uart_puts>
 314:	91480321 	add	x1, x25, #0x200, lsl #12
 318:	d2820002 	mov	x2, #0x1000                	// #4096
 31c:	8b1702c0 	add	x0, x22, x23
 320:	8b190000 	add	x0, x0, x25
 324:	97ffff95 	bl	178 <mmu_print_range>
 328:	91016300 	add	x0, x24, #0x58
 32c:	94000121 	bl	7b0 <uart_puts>
 330:	f107fe7f 	cmp	x19, #0x1ff
 334:	54fffdc8 	b.hi	2ec <mmu_enable_level_3_table+0x64>  // b.pmore
 338:	d0000001 	adrp	x1, 2000 <task0_header>
 33c:	8b152675 	add	x21, x19, x21, lsl #9
 340:	d280e0e0 	mov	x0, #0x707                 	// #1799
 344:	b20b03e2 	mov	x2, #0x20000000200000      	// #9007199256838144
 348:	f9402c21 	ldr	x1, [x1, #88]
 34c:	f2e00400 	movk	x0, #0x20, lsl #48
 350:	8b133000 	add	x0, x0, x19, lsl #12
 354:	f280e0e2 	movk	x2, #0x707
 358:	8b150c21 	add	x1, x1, x21, lsl #3
 35c:	d503201f 	nop
 360:	f8008420 	str	x0, [x1], #8
 364:	91400400 	add	x0, x0, #0x1, lsl #12
 368:	eb02001f 	cmp	x0, x2
 36c:	54ffffa1 	b.ne	360 <mmu_enable_level_3_table+0xd8>  // b.any
 370:	a94153f3 	ldp	x19, x20, [sp, #16]
 374:	a9425bf5 	ldp	x21, x22, [sp, #32]
 378:	a94363f7 	ldp	x23, x24, [sp, #48]
 37c:	a9446bf9 	ldp	x25, x26, [sp, #64]
 380:	f9402bfb 	ldr	x27, [sp, #80]
 384:	a8c67bfd 	ldp	x29, x30, [sp], #96
 388:	d65f03c0 	ret
 38c:	9126c31a 	add	x26, x24, #0x9b0
 390:	91018340 	add	x0, x26, #0x60
 394:	94000107 	bl	7b0 <uart_puts>
 398:	8b160320 	add	x0, x25, x22
 39c:	d2820002 	mov	x2, #0x1000                	// #4096
 3a0:	8b170001 	add	x1, x0, x23
 3a4:	97ffff75 	bl	178 <mmu_print_range>
 3a8:	91016340 	add	x0, x26, #0x58
 3ac:	94000101 	bl	7b0 <uart_puts>
 3b0:	eb14027f 	cmp	x19, x20
 3b4:	54fff989 	b.ls	2e4 <mmu_enable_level_3_table+0x5c>  // b.plast
 3b8:	d0000002 	adrp	x2, 2000 <task0_header>
 3bc:	8b152680 	add	x0, x20, x21, lsl #9
 3c0:	d374ce83 	lsl	x3, x20, #12
 3c4:	d374ce61 	lsl	x1, x19, #12
 3c8:	f9402c42 	ldr	x2, [x2, #88]
 3cc:	911e1c63 	add	x3, x3, #0x787
 3d0:	911e1c21 	add	x1, x1, #0x787
 3d4:	8b000c40 	add	x0, x2, x0, lsl #3
 3d8:	f8008403 	str	x3, [x0], #8
 3dc:	91400463 	add	x3, x3, #0x1, lsl #12
 3e0:	eb01007f 	cmp	x3, x1
 3e4:	54ffffa1 	b.ne	3d8 <mmu_enable_level_3_table+0x150>  // b.any
 3e8:	17ffffbf 	b	2e4 <mmu_enable_level_3_table+0x5c>
 3ec:	91014360 	add	x0, x27, #0x50
 3f0:	940000f0 	bl	7b0 <uart_puts>
 3f4:	8b160321 	add	x1, x25, x22
 3f8:	d2820002 	mov	x2, #0x1000                	// #4096
 3fc:	aa1903e0 	mov	x0, x25
 400:	97ffff5e 	bl	178 <mmu_print_range>
 404:	91016360 	add	x0, x27, #0x58
 408:	940000ea 	bl	7b0 <uart_puts>
 40c:	b4fff694 	cbz	x20, 2dc <mmu_enable_level_3_table+0x54>
 410:	d0000001 	adrp	x1, 2000 <task0_header>
 414:	d280e0e0 	mov	x0, #0x707                 	// #1799
 418:	f2e00400 	movk	x0, #0x20, lsl #48
 41c:	f9402c21 	ldr	x1, [x1, #88]
 420:	8b143002 	add	x2, x0, x20, lsl #12
 424:	8b153021 	add	x1, x1, x21, lsl #12
 428:	f8008420 	str	x0, [x1], #8
 42c:	91400400 	add	x0, x0, #0x1, lsl #12
 430:	eb02001f 	cmp	x0, x2
 434:	54ffffa1 	b.ne	428 <mmu_enable_level_3_table+0x1a0>  // b.any
 438:	17ffffa9 	b	2dc <mmu_enable_level_3_table+0x54>
 43c:	d503201f 	nop

0000000000000440 <mmu_enable_level_2_table>:
 440:	a9bb7bfd 	stp	x29, x30, [sp, #-80]!
 444:	910003fd 	mov	x29, sp
 448:	a90153f3 	stp	x19, x20, [sp, #16]
 44c:	aa0003f3 	mov	x19, x0
 450:	b0000014 	adrp	x20, 1000 <__exception_vectors_start>
 454:	9126c294 	add	x20, x20, #0x9b0
 458:	a9025bf5 	stp	x21, x22, [sp, #32]
 45c:	9101a280 	add	x0, x20, #0x68
 460:	a90363f7 	stp	x23, x24, [sp, #48]
 464:	aa0103f8 	mov	x24, x1
 468:	d280e0b7 	mov	x23, #0x705                 	// #1797
 46c:	f90023f9 	str	x25, [sp, #64]
 470:	940000d0 	bl	7b0 <uart_puts>
 474:	d36aa679 	lsl	x25, x19, #22
 478:	91014280 	add	x0, x20, #0x50
 47c:	940000cd 	bl	7b0 <uart_puts>
 480:	f2e00417 	movk	x23, #0x20, lsl #48
 484:	91480321 	add	x1, x25, #0x200, lsl #12
 488:	d2a00402 	mov	x2, #0x200000              	// #2097152
 48c:	aa1903e0 	mov	x0, x25
 490:	97ffff3a 	bl	178 <mmu_print_range>
 494:	91016280 	add	x0, x20, #0x58
 498:	cb1902f7 	sub	x23, x23, x25
 49c:	940000c5 	bl	7b0 <uart_puts>
 4a0:	91024296 	add	x22, x20, #0x90
 4a4:	d0000002 	adrp	x2, 2000 <task0_header>
 4a8:	d0000001 	adrp	x1, 2000 <task0_header>
 4ac:	d369a260 	lsl	x0, x19, #23
 4b0:	d2800015 	mov	x21, #0x0                   	// #0
 4b4:	f9402c42 	ldr	x2, [x2, #88]
 4b8:	91480019 	add	x25, x0, #0x200, lsl #12
 4bc:	f9402421 	ldr	x1, [x1, #72]
 4c0:	eb15031f 	cmp	x24, x21
 4c4:	8b133042 	add	x2, x2, x19, lsl #12
 4c8:	91000c54 	add	x20, x2, #0x3
 4cc:	8b131033 	add	x19, x1, x19, lsl #4
 4d0:	8b0002e1 	add	x1, x23, x0
 4d4:	54000200 	b.eq	514 <mmu_enable_level_2_table+0xd4>  // b.none
 4d8:	f9000261 	str	x1, [x19]
 4dc:	aa1903e0 	mov	x0, x25
 4e0:	91002273 	add	x19, x19, #0x8
 4e4:	b40000f5 	cbz	x21, 500 <mmu_enable_level_2_table+0xc0>
 4e8:	a94153f3 	ldp	x19, x20, [sp, #16]
 4ec:	a9425bf5 	ldp	x21, x22, [sp, #32]
 4f0:	a94363f7 	ldp	x23, x24, [sp, #48]
 4f4:	f94023f9 	ldr	x25, [sp, #64]
 4f8:	a8c57bfd 	ldp	x29, x30, [sp], #80
 4fc:	d65f03c0 	ret
 500:	d2800035 	mov	x21, #0x1                   	// #1
 504:	91480019 	add	x25, x0, #0x200, lsl #12
 508:	8b0002e1 	add	x1, x23, x0
 50c:	eb15031f 	cmp	x24, x21
 510:	54fffe41 	b.ne	4d8 <mmu_enable_level_2_table+0x98>  // b.any
 514:	aa1903e1 	mov	x1, x25
 518:	d2a00402 	mov	x2, #0x200000              	// #2097152
 51c:	97ffff17 	bl	178 <mmu_print_range>
 520:	aa1603e0 	mov	x0, x22
 524:	940000a3 	bl	7b0 <uart_puts>
 528:	f9000274 	str	x20, [x19]
 52c:	17ffffec 	b	4dc <mmu_enable_level_2_table+0x9c>

0000000000000530 <mmu_enable>:
 530:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
 534:	910003fd 	mov	x29, sp
 538:	a90153f3 	stp	x19, x20, [sp, #16]
 53c:	f90013f5 	str	x21, [sp, #32]
 540:	aa0103f5 	mov	x21, x1
 544:	d29fe081 	mov	x1, #0xff04                	// #65284
 548:	d518a201 	msr	mair_el1, x1
 54c:	b40001b5 	cbz	x21, 580 <mmu_enable+0x50>
 550:	aa0003f4 	mov	x20, x0
 554:	d2800013 	mov	x19, #0x0                   	// #0
 558:	aa1303e0 	mov	x0, x19
 55c:	d2800021 	mov	x1, #0x1                   	// #1
 560:	97ffffb8 	bl	440 <mmu_enable_level_2_table>
 564:	f9400682 	ldr	x2, [x20, #8]
 568:	aa1303e0 	mov	x0, x19
 56c:	f8410681 	ldr	x1, [x20], #16
 570:	91000673 	add	x19, x19, #0x1
 574:	97ffff45 	bl	288 <mmu_enable_level_3_table>
 578:	eb1302bf 	cmp	x21, x19
 57c:	54fffee1 	b.ne	558 <mmu_enable+0x28>  // b.any
 580:	b0000013 	adrp	x19, 1000 <__exception_vectors_start>
 584:	9126c273 	add	x19, x19, #0x9b0
 588:	9102a260 	add	x0, x19, #0xa8
 58c:	94000089 	bl	7b0 <uart_puts>
 590:	d2a00402 	mov	x2, #0x200000              	// #2097152
 594:	d2a80001 	mov	x1, #0x40000000            	// #1073741824
 598:	d2a7e000 	mov	x0, #0x3f000000            	// #1056964608
 59c:	97fffef7 	bl	178 <mmu_print_range>
 5a0:	91016260 	add	x0, x19, #0x58
 5a4:	94000083 	bl	7b0 <uart_puts>
 5a8:	d0000000 	adrp	x0, 2000 <task0_header>
 5ac:	d280c028 	mov	x8, #0x601                 	// #1537
 5b0:	d280c027 	mov	x7, #0x601                 	// #1537
 5b4:	d280c026 	mov	x6, #0x601                 	// #1537
 5b8:	f9402400 	ldr	x0, [x0, #72]
 5bc:	d280c025 	mov	x5, #0x601                 	// #1537
 5c0:	d280c024 	mov	x4, #0x601                 	// #1537
 5c4:	d280c023 	mov	x3, #0x601                 	// #1537
 5c8:	913f0009 	add	x9, x0, #0xfc0
 5cc:	913f800a 	add	x10, x0, #0xfe0
 5d0:	d280c022 	mov	x2, #0x601                 	// #1537
 5d4:	d280c021 	mov	x1, #0x601                 	// #1537
 5d8:	f2a7e008 	movk	x8, #0x3f00, lsl #16
 5dc:	f2a7e407 	movk	x7, #0x3f20, lsl #16
 5e0:	f2a7e806 	movk	x6, #0x3f40, lsl #16
 5e4:	f2a7ec05 	movk	x5, #0x3f60, lsl #16
 5e8:	f2a7f004 	movk	x4, #0x3f80, lsl #16
 5ec:	f2a7f403 	movk	x3, #0x3fa0, lsl #16
 5f0:	f2a7f802 	movk	x2, #0x3fc0, lsl #16
 5f4:	f2a7fc01 	movk	x1, #0x3fe0, lsl #16
 5f8:	f2e00408 	movk	x8, #0x20, lsl #48
 5fc:	f2e00407 	movk	x7, #0x20, lsl #48
 600:	f2e00406 	movk	x6, #0x20, lsl #48
 604:	f2e00405 	movk	x5, #0x20, lsl #48
 608:	f2e00404 	movk	x4, #0x20, lsl #48
 60c:	f2e00403 	movk	x3, #0x20, lsl #48
 610:	f2e00402 	movk	x2, #0x20, lsl #48
 614:	f2e00401 	movk	x1, #0x20, lsl #48
 618:	a94153f3 	ldp	x19, x20, [sp, #16]
 61c:	f94013f5 	ldr	x21, [sp, #32]
 620:	a9001d28 	stp	x8, x7, [x9]
 624:	a9000d44 	stp	x4, x3, [x10]
 628:	a9011526 	stp	x6, x5, [x9, #16]
 62c:	a9010542 	stp	x2, x1, [x10, #16]
 630:	a8c37bfd 	ldp	x29, x30, [sp], #48
 634:	d65f03c0 	ret

0000000000000638 <uart_init>:
 638:	a9b67bfd 	stp	x29, x30, [sp, #-160]!
 63c:	d2900042 	mov	x2, #0x8002                	// #32770
 640:	f2a00062 	movk	x2, #0x3, lsl #16
 644:	910003fd 	mov	x29, sp
 648:	d2800101 	mov	x1, #0x8                   	// #8
 64c:	d2812000 	mov	x0, #0x900                 	// #2304
 650:	d2800483 	mov	x3, #0x24                  	// #36
 654:	f2c00182 	movk	x2, #0xc, lsl #32
 658:	f2c00041 	movk	x1, #0x2, lsl #32
 65c:	f2a007a0 	movk	x0, #0x3d, lsl #16
 660:	a9010be3 	stp	x3, x2, [sp, #16]
 664:	a90203e1 	stp	x1, x0, [sp, #32]
 668:	b90033ff 	str	wzr, [sp, #48]
 66c:	d5033fbf 	dmb	sy
 670:	d2800101 	mov	x1, #0x8                   	// #8
 674:	910043e0 	add	x0, sp, #0x10
 678:	9400012c 	bl	b28 <mbox_call>
 67c:	3100041f 	cmn	w0, #0x1
 680:	54000780 	b.eq	770 <uart_init+0x138>  // b.none
 684:	d2800081 	mov	x1, #0x4                   	// #4
 688:	d2801283 	mov	x3, #0x94                  	// #148
 68c:	f2a7e401 	movk	x1, #0x3f20, lsl #16
 690:	f2a7e403 	movk	x3, #0x3f20, lsl #16
 694:	528012c0 	mov	w0, #0x96                  	// #150
 698:	b9400022 	ldr	w2, [x1]
 69c:	12117042 	and	w2, w2, #0xffff8fff
 6a0:	b9000022 	str	w2, [x1]
 6a4:	b9400022 	ldr	w2, [x1]
 6a8:	120e7042 	and	w2, w2, #0xfffc7fff
 6ac:	b9000022 	str	w2, [x1]
 6b0:	b9400022 	ldr	w2, [x1]
 6b4:	32120042 	orr	w2, w2, #0x4000
 6b8:	b9000022 	str	w2, [x1]
 6bc:	b9400022 	ldr	w2, [x1]
 6c0:	320f0042 	orr	w2, w2, #0x20000
 6c4:	b9000022 	str	w2, [x1]
 6c8:	b9400061 	ldr	w1, [x3]
 6cc:	121e7421 	and	w1, w1, #0xfffffffc
 6d0:	b9000061 	str	w1, [x3]
 6d4:	d503201f 	nop
 6d8:	d503201f 	nop
 6dc:	71000400 	subs	w0, w0, #0x1
 6e0:	54ffffc1 	b.ne	6d8 <uart_init+0xa0>  // b.any
 6e4:	d2801302 	mov	x2, #0x98                  	// #152
 6e8:	528012c0 	mov	w0, #0x96                  	// #150
 6ec:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 6f0:	b9400041 	ldr	w1, [x2]
 6f4:	32120421 	orr	w1, w1, #0xc000
 6f8:	b9000041 	str	w1, [x2]
 6fc:	d503201f 	nop
 700:	d503201f 	nop
 704:	71000400 	subs	w0, w0, #0x1
 708:	54ffffc1 	b.ne	700 <uart_init+0xc8>  // b.any
 70c:	d2801300 	mov	x0, #0x98                  	// #152
 710:	d2820001 	mov	x1, #0x1000                	// #4096
 714:	f2a7e400 	movk	x0, #0x3f20, lsl #16
 718:	f2a7e401 	movk	x1, #0x3f20, lsl #16
 71c:	52800164 	mov	w4, #0xb                   	// #11
 720:	52806023 	mov	w3, #0x301                 	// #769
 724:	b900001f 	str	wzr, [x0]
 728:	52800000 	mov	w0, #0x0                   	// #0
 72c:	b9404422 	ldr	w2, [x1, #68]
 730:	12155042 	and	w2, w2, #0xfffff800
 734:	b9004422 	str	w2, [x1, #68]
 738:	b9402422 	ldr	w2, [x1, #36]
 73c:	12103c42 	and	w2, w2, #0xffff0000
 740:	321f0042 	orr	w2, w2, #0x2
 744:	b9002422 	str	w2, [x1, #36]
 748:	b9402822 	ldr	w2, [x1, #40]
 74c:	121b6842 	and	w2, w2, #0xffffffe0
 750:	2a040042 	orr	w2, w2, w4
 754:	b9002822 	str	w2, [x1, #40]
 758:	b9402c22 	ldr	w2, [x1, #44]
 75c:	321b0442 	orr	w2, w2, #0x60
 760:	b9002c22 	str	w2, [x1, #44]
 764:	b9403022 	ldr	w2, [x1, #48]
 768:	2a030042 	orr	w2, w2, w3
 76c:	b9003022 	str	w2, [x1, #48]
 770:	a8ca7bfd 	ldp	x29, x30, [sp], #160
 774:	d65f03c0 	ret

0000000000000778 <uart_send>:
 778:	d2820002 	mov	x2, #0x1000                	// #4096
 77c:	12001c00 	and	w0, w0, #0xff
 780:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 784:	b9401841 	ldr	w1, [x2, #24]
 788:	362800a1 	tbz	w1, #5, 79c <uart_send+0x24>
 78c:	d503201f 	nop
 790:	d503201f 	nop
 794:	b9401841 	ldr	w1, [x2, #24]
 798:	372fffc1 	tbnz	w1, #5, 790 <uart_send+0x18>
 79c:	d2820001 	mov	x1, #0x1000                	// #4096
 7a0:	f2a7e401 	movk	x1, #0x3f20, lsl #16
 7a4:	b9000020 	str	w0, [x1]
 7a8:	d65f03c0 	ret
 7ac:	d503201f 	nop

00000000000007b0 <uart_puts>:
 7b0:	39400001 	ldrb	w1, [x0]
 7b4:	34000221 	cbz	w1, 7f8 <uart_puts+0x48>
 7b8:	d2820002 	mov	x2, #0x1000                	// #4096
 7bc:	528001a4 	mov	w4, #0xd                   	// #13
 7c0:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 7c4:	d503201f 	nop
 7c8:	7100283f 	cmp	w1, #0xa
 7cc:	540001a0 	b.eq	800 <uart_puts+0x50>  // b.none
 7d0:	b9401841 	ldr	w1, [x2, #24]
 7d4:	39400003 	ldrb	w3, [x0]
 7d8:	362800a1 	tbz	w1, #5, 7ec <uart_puts+0x3c>
 7dc:	d503201f 	nop
 7e0:	d503201f 	nop
 7e4:	b9401841 	ldr	w1, [x2, #24]
 7e8:	372fffc1 	tbnz	w1, #5, 7e0 <uart_puts+0x30>
 7ec:	b9000043 	str	w3, [x2]
 7f0:	38401c01 	ldrb	w1, [x0, #1]!
 7f4:	35fffea1 	cbnz	w1, 7c8 <uart_puts+0x18>
 7f8:	d65f03c0 	ret
 7fc:	d503201f 	nop
 800:	b9401841 	ldr	w1, [x2, #24]
 804:	372fffc1 	tbnz	w1, #5, 7fc <uart_puts+0x4c>
 808:	b9000044 	str	w4, [x2]
 80c:	17fffff1 	b	7d0 <uart_puts+0x20>

0000000000000810 <uart_nputs>:
 810:	34000281 	cbz	w1, 860 <uart_nputs+0x50>
 814:	51000424 	sub	w4, w1, #0x1
 818:	d2820002 	mov	x2, #0x1000                	// #4096
 81c:	91000484 	add	x4, x4, #0x1
 820:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 824:	8b040004 	add	x4, x0, x4
 828:	528001a5 	mov	w5, #0xd                   	// #13
 82c:	d503201f 	nop
 830:	39400003 	ldrb	w3, [x0]
 834:	34000163 	cbz	w3, 860 <uart_nputs+0x50>
 838:	7100287f 	cmp	w3, #0xa
 83c:	54000061 	b.ne	848 <uart_nputs+0x38>  // b.any
 840:	1400000a 	b	868 <uart_nputs+0x58>
 844:	d503201f 	nop
 848:	b9401841 	ldr	w1, [x2, #24]
 84c:	372fffc1 	tbnz	w1, #5, 844 <uart_nputs+0x34>
 850:	b9000043 	str	w3, [x2]
 854:	91000400 	add	x0, x0, #0x1
 858:	eb04001f 	cmp	x0, x4
 85c:	54fffea1 	b.ne	830 <uart_nputs+0x20>  // b.any
 860:	d65f03c0 	ret
 864:	d503201f 	nop
 868:	b9401841 	ldr	w1, [x2, #24]
 86c:	372fffc1 	tbnz	w1, #5, 864 <uart_nputs+0x54>
 870:	b9000045 	str	w5, [x2]
 874:	39400003 	ldrb	w3, [x0]
 878:	17fffff4 	b	848 <uart_nputs+0x38>
 87c:	d503201f 	nop

0000000000000880 <uart_tohex>:
 880:	12000c00 	and	w0, w0, #0xf
 884:	51000400 	sub	w0, w0, #0x1
 888:	12001c00 	and	w0, w0, #0xff
 88c:	7100381f 	cmp	w0, #0xe
 890:	540000c8 	b.hi	8a8 <uart_tohex+0x28>  // b.pmore
 894:	92401c00 	and	x0, x0, #0xff
 898:	b0000001 	adrp	x1, 1000 <__exception_vectors_start>
 89c:	912a4021 	add	x1, x1, #0xa90
 8a0:	38606820 	ldrb	w0, [x1, x0]
 8a4:	d65f03c0 	ret
 8a8:	52800600 	mov	w0, #0x30                  	// #48
 8ac:	d65f03c0 	ret

00000000000008b0 <uart_u64hex>:
 8b0:	aa0003e5 	mov	x5, x0
 8b4:	b0000006 	adrp	x6, 1000 <__exception_vectors_start>
 8b8:	912a40c6 	add	x6, x6, #0xa90
 8bc:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
 8c0:	910040c0 	add	x0, x6, #0x10
 8c4:	910003fd 	mov	x29, sp
 8c8:	97ffffba 	bl	7b0 <uart_puts>
 8cc:	aa0603e0 	mov	x0, x6
 8d0:	d2820002 	mov	x2, #0x1000                	// #4096
 8d4:	52800783 	mov	w3, #0x3c                  	// #60
 8d8:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 8dc:	d503201f 	nop
 8e0:	9ac324a1 	lsr	x1, x5, x3
 8e4:	12000c21 	and	w1, w1, #0xf
 8e8:	51000421 	sub	w1, w1, #0x1
 8ec:	52800604 	mov	w4, #0x30                  	// #48
 8f0:	12001c21 	and	w1, w1, #0xff
 8f4:	7100383f 	cmp	w1, #0xe
 8f8:	540000a8 	b.hi	90c <uart_u64hex+0x5c>  // b.pmore
 8fc:	92401c21 	and	x1, x1, #0xff
 900:	38616804 	ldrb	w4, [x0, x1]
 904:	14000002 	b	90c <uart_u64hex+0x5c>
 908:	d503201f 	nop
 90c:	b9401841 	ldr	w1, [x2, #24]
 910:	372fffc1 	tbnz	w1, #5, 908 <uart_u64hex+0x58>
 914:	b9000044 	str	w4, [x2]
 918:	51001063 	sub	w3, w3, #0x4
 91c:	3100107f 	cmn	w3, #0x4
 920:	54fffe01 	b.ne	8e0 <uart_u64hex+0x30>  // b.any
 924:	a8c17bfd 	ldp	x29, x30, [sp], #16
 928:	d65f03c0 	ret
 92c:	d503201f 	nop

0000000000000930 <uart_u64hex_s>:
 930:	aa0003e6 	mov	x6, x0
 934:	b0000008 	adrp	x8, 1000 <__exception_vectors_start>
 938:	912a4107 	add	x7, x8, #0xa90
 93c:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
 940:	910040e0 	add	x0, x7, #0x10
 944:	910003fd 	mov	x29, sp
 948:	97ffff9a 	bl	7b0 <uart_puts>
 94c:	d2820002 	mov	x2, #0x1000                	// #4096
 950:	52800783 	mov	w3, #0x3c                  	// #60
 954:	52800005 	mov	w5, #0x0                   	// #0
 958:	f2a7e402 	movk	x2, #0x3f20, lsl #16
 95c:	d503201f 	nop
 960:	520000a4 	eor	w4, w5, #0x1
 964:	9ac324c1 	lsr	x1, x6, x3
 968:	72001c21 	ands	w1, w1, #0xff
 96c:	52800005 	mov	w5, #0x0                   	// #0
 970:	1a9f0084 	csel	w4, w4, wzr, eq  // eq = none
 974:	350001e4 	cbnz	w4, 9b0 <uart_u64hex_s+0x80>
 978:	12000c21 	and	w1, w1, #0xf
 97c:	52800600 	mov	w0, #0x30                  	// #48
 980:	51000421 	sub	w1, w1, #0x1
 984:	12001c21 	and	w1, w1, #0xff
 988:	7100383f 	cmp	w1, #0xe
 98c:	540000a8 	b.hi	9a0 <uart_u64hex_s+0x70>  // b.pmore
 990:	92401c21 	and	x1, x1, #0xff
 994:	386168e0 	ldrb	w0, [x7, x1]
 998:	14000002 	b	9a0 <uart_u64hex_s+0x70>
 99c:	d503201f 	nop
 9a0:	b9401841 	ldr	w1, [x2, #24]
 9a4:	372fffc1 	tbnz	w1, #5, 99c <uart_u64hex_s+0x6c>
 9a8:	52800025 	mov	w5, #0x1                   	// #1
 9ac:	b9000040 	str	w0, [x2]
 9b0:	71001063 	subs	w3, w3, #0x4
 9b4:	54fffd61 	b.ne	960 <uart_u64hex_s+0x30>  // b.any
 9b8:	12000cc0 	and	w0, w6, #0xf
 9bc:	52800602 	mov	w2, #0x30                  	// #48
 9c0:	51000400 	sub	w0, w0, #0x1
 9c4:	12001c00 	and	w0, w0, #0xff
 9c8:	7100381f 	cmp	w0, #0xe
 9cc:	54000088 	b.hi	9dc <uart_u64hex_s+0xac>  // b.pmore
 9d0:	912a4108 	add	x8, x8, #0xa90
 9d4:	92401c00 	and	x0, x0, #0xff
 9d8:	38606902 	ldrb	w2, [x8, x0]
 9dc:	d2820001 	mov	x1, #0x1000                	// #4096
 9e0:	f2a7e401 	movk	x1, #0x3f20, lsl #16
 9e4:	b9401820 	ldr	w0, [x1, #24]
 9e8:	362800a0 	tbz	w0, #5, 9fc <uart_u64hex_s+0xcc>
 9ec:	d503201f 	nop
 9f0:	d503201f 	nop
 9f4:	b9401820 	ldr	w0, [x1, #24]
 9f8:	372fffc0 	tbnz	w0, #5, 9f0 <uart_u64hex_s+0xc0>
 9fc:	d2820000 	mov	x0, #0x1000                	// #4096
 a00:	f2a7e400 	movk	x0, #0x3f20, lsl #16
 a04:	b9000002 	str	w2, [x0]
 a08:	a8c17bfd 	ldp	x29, x30, [sp], #16
 a0c:	d65f03c0 	ret

0000000000000a10 <irq_enable_system_timer>:
 a10:	d2964001 	mov	x1, #0xb200                	// #45568
 a14:	f100041f 	cmp	x0, #0x1
 a18:	f2a7e001 	movk	x1, #0x3f00, lsl #16
 a1c:	52800082 	mov	w2, #0x4                   	// #4
 a20:	52800040 	mov	w0, #0x2                   	// #2
 a24:	1a820000 	csel	w0, w0, w2, eq  // eq = none
 a28:	b9001020 	str	w0, [x1, #16]
 a2c:	d65f03c0 	ret

0000000000000a30 <timer_init_core0>:
 a30:	9e630000 	ucvtf	d0, x0
 a34:	d2c80001 	mov	x1, #0x400000000000        	// #70368744177664
 a38:	f2e811e1 	movk	x1, #0x408f, lsl #48
 a3c:	9e670022 	fmov	d2, x1
 a40:	d2c9f001 	mov	x1, #0x4f8000000000        	// #87411174408192
 a44:	d2800685 	mov	x5, #0x34                  	// #52
 a48:	f2e83041 	movk	x1, #0x4182, lsl #48
 a4c:	9e670021 	fmov	d1, x1
 a50:	1e621800 	fdiv	d0, d0, d2
 a54:	d2800481 	mov	x1, #0x24                  	// #36
 a58:	f2a80001 	movk	x1, #0x4000, lsl #16
 a5c:	f2a80005 	movk	x5, #0x4000, lsl #16
 a60:	d2800803 	mov	x3, #0x40                  	// #64
 a64:	52a60006 	mov	w6, #0x30000000            	// #805306368
 a68:	f2a80003 	movk	x3, #0x4000, lsl #16
 a6c:	b900003f 	str	wzr, [x1]
 a70:	52800044 	mov	w4, #0x2                   	// #2
 a74:	52b80002 	mov	w2, #0xc0000000            	// #-1073741824
 a78:	1e610800 	fmul	d0, d0, d1
 a7c:	9e790000 	fcvtzu	x0, d0
 a80:	0b060000 	add	w0, w0, w6
 a84:	b90000a0 	str	w0, [x5]
 a88:	b9000064 	str	w4, [x3]
 a8c:	b9001422 	str	w2, [x1, #20]
 a90:	d65f03c0 	ret
 a94:	d503201f 	nop

0000000000000a98 <timer_one_shot_sys>:
 a98:	d2860002 	mov	x2, #0x3000                	// #12288
 a9c:	f100041f 	cmp	x0, #0x1
 aa0:	f2a7e002 	movk	x2, #0x3f00, lsl #16
 aa4:	b9400440 	ldr	w0, [x2, #4]
 aa8:	0b010000 	add	w0, w0, w1
 aac:	540000a0 	b.eq	ac0 <timer_one_shot_sys+0x28>  // b.none
 ab0:	b9001840 	str	w0, [x2, #24]
 ab4:	52800100 	mov	w0, #0x8                   	// #8
 ab8:	b9000040 	str	w0, [x2]
 abc:	d65f03c0 	ret
 ac0:	b9001040 	str	w0, [x2, #16]
 ac4:	52800040 	mov	w0, #0x2                   	// #2
 ac8:	b9000040 	str	w0, [x2]
 acc:	d65f03c0 	ret

0000000000000ad0 <timer_delay_sys>:
 ad0:	d2860003 	mov	x3, #0x3000                	// #12288
 ad4:	f100041f 	cmp	x0, #0x1
 ad8:	f2a7e003 	movk	x3, #0x3f00, lsl #16
 adc:	b9400460 	ldr	w0, [x3, #4]
 ae0:	0b010000 	add	w0, w0, w1
 ae4:	54000100 	b.eq	b04 <timer_delay_sys+0x34>  // b.none
 ae8:	aa0303e2 	mov	x2, x3
 aec:	b9001860 	str	w0, [x3, #24]
 af0:	52800100 	mov	w0, #0x8                   	// #8
 af4:	b9000060 	str	w0, [x3]
 af8:	b9400040 	ldr	w0, [x2]
 afc:	361fffe0 	tbz	w0, #3, af8 <timer_delay_sys+0x28>
 b00:	d65f03c0 	ret
 b04:	aa0303e1 	mov	x1, x3
 b08:	b9001060 	str	w0, [x3, #16]
 b0c:	52800040 	mov	w0, #0x2                   	// #2
 b10:	b9000060 	str	w0, [x3]
 b14:	d503201f 	nop
 b18:	b9400020 	ldr	w0, [x1]
 b1c:	360fffe0 	tbz	w0, #1, b18 <timer_delay_sys+0x48>
 b20:	d65f03c0 	ret
 b24:	00000000 	.inst	0x00000000 ; undefined

0000000000000b28 <mbox_call>:
 b28:	d2971003 	mov	x3, #0xb880                	// #47232
 b2c:	f2a7e003 	movk	x3, #0x3f00, lsl #16
 b30:	b9401862 	ldr	w2, [x3, #24]
 b34:	36f80082 	tbz	w2, #31, b44 <mbox_call+0x1c>
 b38:	d503201f 	nop
 b3c:	b9401862 	ldr	w2, [x3, #24]
 b40:	37ffffc2 	tbnz	w2, #31, b38 <mbox_call+0x10>
 b44:	d2971003 	mov	x3, #0xb880                	// #47232
 b48:	2a0003e2 	mov	w2, w0
 b4c:	f2a7e003 	movk	x3, #0x3f00, lsl #16
 b50:	52b00005 	mov	w5, #0x80000000            	// #-2147483648
 b54:	33000c22 	bfxil	w2, w1, #0, #4
 b58:	aa0303e1 	mov	x1, x3
 b5c:	b9002062 	str	w2, [x3, #32]
 b60:	320107e4 	mov	w4, #0x80000001            	// #-2147483647
 b64:	b9400403 	ldr	w3, [x0, #4]
 b68:	b9401820 	ldr	w0, [x1, #24]
 b6c:	37f00140 	tbnz	w0, #30, b94 <mbox_call+0x6c>
 b70:	b9400020 	ldr	w0, [x1]
 b74:	6b00005f 	cmp	w2, w0
 b78:	54ffff81 	b.ne	b68 <mbox_call+0x40>  // b.any
 b7c:	6b05007f 	cmp	w3, w5
 b80:	540000e0 	b.eq	b9c <mbox_call+0x74>  // b.none
 b84:	6b04007f 	cmp	w3, w4
 b88:	54ffff01 	b.ne	b68 <mbox_call+0x40>  // b.any
 b8c:	12800000 	mov	w0, #0xffffffff            	// #-1
 b90:	d65f03c0 	ret
 b94:	d503201f 	nop
 b98:	17fffff4 	b	b68 <mbox_call+0x40>
 b9c:	52800000 	mov	w0, #0x0                   	// #0
 ba0:	d65f03c0 	ret
 ba4:	00000000 	.inst	0x00000000 ; undefined

0000000000000ba8 <task_get_list_item>:
 ba8:	d36aa400 	lsl	x0, x0, #22
 bac:	d28a8921 	mov	x1, #0x5449                	// #21577
 bb0:	91480000 	add	x0, x0, #0x200, lsl #12
 bb4:	f2a9a8a1 	movk	x1, #0x4d45, lsl #16
 bb8:	f9400002 	ldr	x2, [x0]
 bbc:	eb01005f 	cmp	x2, x1
 bc0:	54000041 	b.ne	bc8 <task_get_list_item+0x20>  // b.any
 bc4:	d65f03c0 	ret
 bc8:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
 bcc:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
 bd0:	912aa000 	add	x0, x0, #0xaa8
 bd4:	910003fd 	mov	x29, sp
 bd8:	97fffef6 	bl	7b0 <uart_puts>
 bdc:	d2800000 	mov	x0, #0x0                   	// #0
 be0:	a8c17bfd 	ldp	x29, x30, [sp], #16
 be4:	d65f03c0 	ret

0000000000000be8 <task_get_header>:
 be8:	d36aa401 	lsl	x1, x0, #22
 bec:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
 bf0:	91480021 	add	x1, x1, #0x200, lsl #12
 bf4:	910003fd 	mov	x29, sp
 bf8:	d28a8922 	mov	x2, #0x5449                	// #21577
 bfc:	f9400020 	ldr	x0, [x1]
 c00:	f2a9a8a2 	movk	x2, #0x4d45, lsl #16
 c04:	eb02001f 	cmp	x0, x2
 c08:	540001e1 	b.ne	c44 <task_get_header+0x5c>  // b.any
 c0c:	f9400822 	ldr	x2, [x1, #16]
 c10:	d2882a83 	mov	x3, #0x4154                	// #16724
 c14:	f2a96a63 	movk	x3, #0x4b53, lsl #16
 c18:	8b020020 	add	x0, x1, x2
 c1c:	f8626821 	ldr	x1, [x1, x2]
 c20:	eb03003f 	cmp	x1, x3
 c24:	540000c0 	b.eq	c3c <task_get_header+0x54>  // b.none
 c28:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
 c2c:	912aa000 	add	x0, x0, #0xaa8
 c30:	9100c000 	add	x0, x0, #0x30
 c34:	97fffedf 	bl	7b0 <uart_puts>
 c38:	d2800000 	mov	x0, #0x0                   	// #0
 c3c:	a8c17bfd 	ldp	x29, x30, [sp], #16
 c40:	d65f03c0 	ret
 c44:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
 c48:	912aa000 	add	x0, x0, #0xaa8
 c4c:	97fffed9 	bl	7b0 <uart_puts>
 c50:	d2800000 	mov	x0, #0x0                   	// #0
 c54:	f9400800 	ldr	x0, [x0, #16]
 c58:	d4207d00 	brk	#0x3e8
 c5c:	d503201f 	nop

0000000000000c60 <task_header_rebase>:
 c60:	a9bc7bfd 	stp	x29, x30, [sp, #-64]!
 c64:	d28a8921 	mov	x1, #0x5449                	// #21577
 c68:	f2a9a8a1 	movk	x1, #0x4d45, lsl #16
 c6c:	910003fd 	mov	x29, sp
 c70:	a90153f3 	stp	x19, x20, [sp, #16]
 c74:	d36aa413 	lsl	x19, x0, #22
 c78:	91480273 	add	x19, x19, #0x200, lsl #12
 c7c:	a9025bf5 	stp	x21, x22, [sp, #32]
 c80:	aa0003f6 	mov	x22, x0
 c84:	f9400260 	ldr	x0, [x19]
 c88:	f9001bf7 	str	x23, [sp, #48]
 c8c:	eb01001f 	cmp	x0, x1
 c90:	54000881 	b.ne	da0 <task_header_rebase+0x140>  // b.any
 c94:	f9400a60 	ldr	x0, [x19, #16]
 c98:	d2882a81 	mov	x1, #0x4154                	// #16724
 c9c:	f2a96a61 	movk	x1, #0x4b53, lsl #16
 ca0:	8b000274 	add	x20, x19, x0
 ca4:	f8606a60 	ldr	x0, [x19, x0]
 ca8:	eb01001f 	cmp	x0, x1
 cac:	54000861 	b.ne	db8 <task_header_rebase+0x158>  // b.any
 cb0:	b0000015 	adrp	x21, 1000 <__exception_vectors_start>
 cb4:	912aa2b5 	add	x21, x21, #0xaa8
 cb8:	910182a0 	add	x0, x21, #0x60
 cbc:	97fffebd 	bl	7b0 <uart_puts>
 cc0:	aa1603e0 	mov	x0, x22
 cc4:	97ffff1b 	bl	930 <uart_u64hex_s>
 cc8:	910242a0 	add	x0, x21, #0x90
 ccc:	97fffeb9 	bl	7b0 <uart_puts>
 cd0:	910282b6 	add	x22, x21, #0xa0
 cd4:	aa1303e0 	mov	x0, x19
 cd8:	97ffff16 	bl	930 <uart_u64hex_s>
 cdc:	9102a2b7 	add	x23, x21, #0xa8
 ce0:	aa1603e0 	mov	x0, x22
 ce4:	97fffeb3 	bl	7b0 <uart_puts>
 ce8:	aa1703e0 	mov	x0, x23
 cec:	97fffeb1 	bl	7b0 <uart_puts>
 cf0:	f9401680 	ldr	x0, [x20, #40]
 cf4:	910342b5 	add	x21, x21, #0xd0
 cf8:	97ffff0e 	bl	930 <uart_u64hex_s>
 cfc:	aa1503e0 	mov	x0, x21
 d00:	97fffeac 	bl	7b0 <uart_puts>
 d04:	f9401680 	ldr	x0, [x20, #40]
 d08:	8b130000 	add	x0, x0, x19
 d0c:	97ffff09 	bl	930 <uart_u64hex_s>
 d10:	aa1603e0 	mov	x0, x22
 d14:	97fffea7 	bl	7b0 <uart_puts>
 d18:	aa1703e0 	mov	x0, x23
 d1c:	97fffea5 	bl	7b0 <uart_puts>
 d20:	f9401a80 	ldr	x0, [x20, #48]
 d24:	97ffff03 	bl	930 <uart_u64hex_s>
 d28:	aa1503e0 	mov	x0, x21
 d2c:	97fffea1 	bl	7b0 <uart_puts>
 d30:	f9401a80 	ldr	x0, [x20, #48]
 d34:	8b130000 	add	x0, x0, x19
 d38:	97fffefe 	bl	930 <uart_u64hex_s>
 d3c:	aa1603e0 	mov	x0, x22
 d40:	97fffe9c 	bl	7b0 <uart_puts>
 d44:	aa1703e0 	mov	x0, x23
 d48:	97fffe9a 	bl	7b0 <uart_puts>
 d4c:	f9401e80 	ldr	x0, [x20, #56]
 d50:	97fffef8 	bl	930 <uart_u64hex_s>
 d54:	aa1503e0 	mov	x0, x21
 d58:	97fffe96 	bl	7b0 <uart_puts>
 d5c:	f9401e80 	ldr	x0, [x20, #56]
 d60:	8b130000 	add	x0, x0, x19
 d64:	97fffef3 	bl	930 <uart_u64hex_s>
 d68:	aa1603e0 	mov	x0, x22
 d6c:	97fffe91 	bl	7b0 <uart_puts>
 d70:	a9428682 	ldp	x2, x1, [x20, #40]
 d74:	f9401e80 	ldr	x0, [x20, #56]
 d78:	a9425bf5 	ldp	x21, x22, [sp, #32]
 d7c:	8b130042 	add	x2, x2, x19
 d80:	8b130021 	add	x1, x1, x19
 d84:	8b130013 	add	x19, x0, x19
 d88:	f9401bf7 	ldr	x23, [sp, #48]
 d8c:	a9028682 	stp	x2, x1, [x20, #40]
 d90:	f9001e93 	str	x19, [x20, #56]
 d94:	a94153f3 	ldp	x19, x20, [sp, #16]
 d98:	a8c47bfd 	ldp	x29, x30, [sp], #64
 d9c:	d65f03c0 	ret
 da0:	b0000000 	adrp	x0, 1000 <__exception_vectors_start>
 da4:	912aa000 	add	x0, x0, #0xaa8
 da8:	97fffe82 	bl	7b0 <uart_puts>
 dac:	d2800000 	mov	x0, #0x0                   	// #0
 db0:	f9400800 	ldr	x0, [x0, #16]
 db4:	d4207d00 	brk	#0x3e8
 db8:	b0000014 	adrp	x20, 1000 <__exception_vectors_start>
 dbc:	912aa294 	add	x20, x20, #0xaa8
 dc0:	9100c280 	add	x0, x20, #0x30
 dc4:	97fffe7b 	bl	7b0 <uart_puts>
 dc8:	91018280 	add	x0, x20, #0x60
 dcc:	97fffe79 	bl	7b0 <uart_puts>
 dd0:	aa1603e0 	mov	x0, x22
 dd4:	97fffed7 	bl	930 <uart_u64hex_s>
 dd8:	91024280 	add	x0, x20, #0x90
 ddc:	97fffe75 	bl	7b0 <uart_puts>
 de0:	aa1303e0 	mov	x0, x19
 de4:	97fffed3 	bl	930 <uart_u64hex_s>
 de8:	91028280 	add	x0, x20, #0xa0
 dec:	97fffe71 	bl	7b0 <uart_puts>
 df0:	9102a280 	add	x0, x20, #0xa8
 df4:	97fffe6f 	bl	7b0 <uart_puts>
 df8:	d2800000 	mov	x0, #0x0                   	// #0
 dfc:	f9401400 	ldr	x0, [x0, #40]
 e00:	d4207d00 	brk	#0x3e8
 e04:	d503201f 	nop

0000000000000e08 <task_bss_zero>:
 e08:	a9bd7bfd 	stp	x29, x30, [sp, #-48]!
 e0c:	910003fd 	mov	x29, sp
 e10:	a90153f3 	stp	x19, x20, [sp, #16]
 e14:	d36aa413 	lsl	x19, x0, #22
 e18:	91480273 	add	x19, x19, #0x200, lsl #12
 e1c:	f9401274 	ldr	x20, [x19, #32]
 e20:	f90013f5 	str	x21, [sp, #32]
 e24:	b0000015 	adrp	x21, 1000 <__exception_vectors_start>
 e28:	912aa2b5 	add	x21, x21, #0xaa8
 e2c:	910362a0 	add	x0, x21, #0xd8
 e30:	97fffe60 	bl	7b0 <uart_puts>
 e34:	f9401260 	ldr	x0, [x19, #32]
 e38:	8b140274 	add	x20, x19, x20
 e3c:	8b000260 	add	x0, x19, x0
 e40:	97fffebc 	bl	930 <uart_u64hex_s>
 e44:	9103e2a0 	add	x0, x21, #0xf8
 e48:	97fffe5a 	bl	7b0 <uart_puts>
 e4c:	f9401660 	ldr	x0, [x19, #40]
 e50:	8b000260 	add	x0, x19, x0
 e54:	97fffeb7 	bl	930 <uart_u64hex_s>
 e58:	910282a0 	add	x0, x21, #0xa0
 e5c:	97fffe55 	bl	7b0 <uart_puts>
 e60:	a9420660 	ldp	x0, x1, [x19, #32]
 e64:	eb00003f 	cmp	x1, x0
 e68:	54000100 	b.eq	e88 <task_bss_zero+0x80>  // b.none
 e6c:	d2800000 	mov	x0, #0x0                   	// #0
 e70:	38206a9f 	strb	wzr, [x20, x0]
 e74:	91000400 	add	x0, x0, #0x1
 e78:	a9420662 	ldp	x2, x1, [x19, #32]
 e7c:	cb020021 	sub	x1, x1, x2
 e80:	eb00003f 	cmp	x1, x0
 e84:	54ffff68 	b.hi	e70 <task_bss_zero+0x68>  // b.pmore
 e88:	a94153f3 	ldp	x19, x20, [sp, #16]
 e8c:	f94013f5 	ldr	x21, [sp, #32]
 e90:	a8c37bfd 	ldp	x29, x30, [sp], #48
 e94:	d65f03c0 	ret

0000000000000e98 <task_save_context>:
 e98:	d50343df 	msr	daifset, #0x3
 e9c:	d10403ff 	sub	sp, sp, #0x100
 ea0:	a90007e0 	stp	x0, x1, [sp]
 ea4:	a9010fe2 	stp	x2, x3, [sp, #16]
 ea8:	a90217e4 	stp	x4, x5, [sp, #32]
 eac:	a9031fe6 	stp	x6, x7, [sp, #48]
 eb0:	a90427e8 	stp	x8, x9, [sp, #64]
 eb4:	a9052fea 	stp	x10, x11, [sp, #80]
 eb8:	a90637ec 	stp	x12, x13, [sp, #96]
 ebc:	a9073fee 	stp	x14, x15, [sp, #112]
 ec0:	a90847f0 	stp	x16, x17, [sp, #128]
 ec4:	a9094ff2 	stp	x18, x19, [sp, #144]
 ec8:	a90a57f4 	stp	x20, x21, [sp, #160]
 ecc:	a90b5ff6 	stp	x22, x23, [sp, #176]
 ed0:	a90c67f8 	stp	x24, x25, [sp, #192]
 ed4:	a90d6ffa 	stp	x26, x27, [sp, #208]
 ed8:	a90e77fc 	stp	x28, x29, [sp, #224]
 edc:	d5384020 	mrs	x0, elr_el1
 ee0:	a90f7be0 	stp	x0, x30, [sp, #240]
 ee4:	d65f03c0 	ret

0000000000000ee8 <task_restore_context>:
 ee8:	a94f7be0 	ldp	x0, x30, [sp, #240]
 eec:	d5184020 	msr	elr_el1, x0
 ef0:	a94007e0 	ldp	x0, x1, [sp]
 ef4:	a9410fe2 	ldp	x2, x3, [sp, #16]
 ef8:	a94217e4 	ldp	x4, x5, [sp, #32]
 efc:	a9431fe6 	ldp	x6, x7, [sp, #48]
 f00:	a94427e8 	ldp	x8, x9, [sp, #64]
 f04:	a9452fea 	ldp	x10, x11, [sp, #80]
 f08:	a94637ec 	ldp	x12, x13, [sp, #96]
 f0c:	a9473fee 	ldp	x14, x15, [sp, #112]
 f10:	a94847f0 	ldp	x16, x17, [sp, #128]
 f14:	a9494ff2 	ldp	x18, x19, [sp, #144]
 f18:	a94a57f4 	ldp	x20, x21, [sp, #160]
 f1c:	a94b5ff6 	ldp	x22, x23, [sp, #176]
 f20:	a94c67f8 	ldp	x24, x25, [sp, #192]
 f24:	a94d6ffa 	ldp	x26, x27, [sp, #208]
 f28:	a94e77fc 	ldp	x28, x29, [sp, #224]
 f2c:	910403ff 	add	sp, sp, #0x100
 f30:	d50343ff 	msr	daifclr, #0x3
 f34:	d65f03c0 	ret

0000000000000f38 <task_save>:
 f38:	a9bf7bfd 	stp	x29, x30, [sp, #-16]!
 f3c:	910003fd 	mov	x29, sp
 f40:	f9400801 	ldr	x1, [x0, #16]
 f44:	910003e1 	mov	x1, sp
 f48:	9100003f 	mov	sp, x1
 f4c:	97ffffd3 	bl	e98 <task_save_context>
 f50:	910003e1 	mov	x1, sp
 f54:	9100003f 	mov	sp, x1
 f58:	a8c17bfd 	ldp	x29, x30, [sp], #16
 f5c:	f9000801 	str	x1, [x0, #16]
 f60:	d65f03c0 	ret

Disassembly of section .vectors:

0000000000001000 <__exception_vectors_start>:
    1000:	d50343df 	msr	daifset, #0x3
    1004:	d10403ff 	sub	sp, sp, #0x100
    1008:	a90007e0 	stp	x0, x1, [sp]
    100c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1010:	a90217e4 	stp	x4, x5, [sp, #32]
    1014:	a9031fe6 	stp	x6, x7, [sp, #48]
    1018:	a90427e8 	stp	x8, x9, [sp, #64]
    101c:	a9052fea 	stp	x10, x11, [sp, #80]
    1020:	a90637ec 	stp	x12, x13, [sp, #96]
    1024:	a9073fee 	stp	x14, x15, [sp, #112]
    1028:	a90847f0 	stp	x16, x17, [sp, #128]
    102c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1030:	a90a57f4 	stp	x20, x21, [sp, #160]
    1034:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1038:	a90c67f8 	stp	x24, x25, [sp, #192]
    103c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1040:	a90e77fc 	stp	x28, x29, [sp, #224]
    1044:	d5384020 	mrs	x0, elr_el1
    1048:	a90f7be0 	stp	x0, x30, [sp, #240]
    104c:	910003e0 	mov	x0, sp
    1050:	97fffc3a 	bl	138 <current_el0_synchronous>
    1054:	140001e1 	b	17d8 <__restore_context>
	...
    1080:	d50343df 	msr	daifset, #0x3
    1084:	d10403ff 	sub	sp, sp, #0x100
    1088:	a90007e0 	stp	x0, x1, [sp]
    108c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1090:	a90217e4 	stp	x4, x5, [sp, #32]
    1094:	a9031fe6 	stp	x6, x7, [sp, #48]
    1098:	a90427e8 	stp	x8, x9, [sp, #64]
    109c:	a9052fea 	stp	x10, x11, [sp, #80]
    10a0:	a90637ec 	stp	x12, x13, [sp, #96]
    10a4:	a9073fee 	stp	x14, x15, [sp, #112]
    10a8:	a90847f0 	stp	x16, x17, [sp, #128]
    10ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    10b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    10b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    10b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    10bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    10c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    10c4:	d5384020 	mrs	x0, elr_el1
    10c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    10cc:	910003e0 	mov	x0, sp
    10d0:	97fffbfe 	bl	c8 <current_el0_irq>
    10d4:	140001c1 	b	17d8 <__restore_context>
	...
    1100:	d50343df 	msr	daifset, #0x3
    1104:	d10403ff 	sub	sp, sp, #0x100
    1108:	a90007e0 	stp	x0, x1, [sp]
    110c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1110:	a90217e4 	stp	x4, x5, [sp, #32]
    1114:	a9031fe6 	stp	x6, x7, [sp, #48]
    1118:	a90427e8 	stp	x8, x9, [sp, #64]
    111c:	a9052fea 	stp	x10, x11, [sp, #80]
    1120:	a90637ec 	stp	x12, x13, [sp, #96]
    1124:	a9073fee 	stp	x14, x15, [sp, #112]
    1128:	a90847f0 	stp	x16, x17, [sp, #128]
    112c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1130:	a90a57f4 	stp	x20, x21, [sp, #160]
    1134:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1138:	a90c67f8 	stp	x24, x25, [sp, #192]
    113c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1140:	a90e77fc 	stp	x28, x29, [sp, #224]
    1144:	d5384020 	mrs	x0, elr_el1
    1148:	a90f7be0 	stp	x0, x30, [sp, #240]
    114c:	910003e0 	mov	x0, sp
    1150:	97fffbe0 	bl	d0 <current_el0_fiq>
    1154:	140001a1 	b	17d8 <__restore_context>
	...
    1180:	d50343df 	msr	daifset, #0x3
    1184:	d10403ff 	sub	sp, sp, #0x100
    1188:	a90007e0 	stp	x0, x1, [sp]
    118c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1190:	a90217e4 	stp	x4, x5, [sp, #32]
    1194:	a9031fe6 	stp	x6, x7, [sp, #48]
    1198:	a90427e8 	stp	x8, x9, [sp, #64]
    119c:	a9052fea 	stp	x10, x11, [sp, #80]
    11a0:	a90637ec 	stp	x12, x13, [sp, #96]
    11a4:	a9073fee 	stp	x14, x15, [sp, #112]
    11a8:	a90847f0 	stp	x16, x17, [sp, #128]
    11ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    11b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    11b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    11b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    11bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    11c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    11c4:	d5384020 	mrs	x0, elr_el1
    11c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    11cc:	910003e0 	mov	x0, sp
    11d0:	97fffbdc 	bl	140 <current_el0_serror>
    11d4:	14000181 	b	17d8 <__restore_context>
	...
    1200:	d50343df 	msr	daifset, #0x3
    1204:	d10403ff 	sub	sp, sp, #0x100
    1208:	a90007e0 	stp	x0, x1, [sp]
    120c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1210:	a90217e4 	stp	x4, x5, [sp, #32]
    1214:	a9031fe6 	stp	x6, x7, [sp, #48]
    1218:	a90427e8 	stp	x8, x9, [sp, #64]
    121c:	a9052fea 	stp	x10, x11, [sp, #80]
    1220:	a90637ec 	stp	x12, x13, [sp, #96]
    1224:	a9073fee 	stp	x14, x15, [sp, #112]
    1228:	a90847f0 	stp	x16, x17, [sp, #128]
    122c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1230:	a90a57f4 	stp	x20, x21, [sp, #160]
    1234:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1238:	a90c67f8 	stp	x24, x25, [sp, #192]
    123c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1240:	a90e77fc 	stp	x28, x29, [sp, #224]
    1244:	d5384020 	mrs	x0, elr_el1
    1248:	a90f7be0 	stp	x0, x30, [sp, #240]
    124c:	910003e0 	mov	x0, sp
    1250:	97fffbbe 	bl	148 <current_elx_synchronous>
    1254:	14000161 	b	17d8 <__restore_context>
	...
    1280:	d50343df 	msr	daifset, #0x3
    1284:	d10403ff 	sub	sp, sp, #0x100
    1288:	a90007e0 	stp	x0, x1, [sp]
    128c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1290:	a90217e4 	stp	x4, x5, [sp, #32]
    1294:	a9031fe6 	stp	x6, x7, [sp, #48]
    1298:	a90427e8 	stp	x8, x9, [sp, #64]
    129c:	a9052fea 	stp	x10, x11, [sp, #80]
    12a0:	a90637ec 	stp	x12, x13, [sp, #96]
    12a4:	a9073fee 	stp	x14, x15, [sp, #112]
    12a8:	a90847f0 	stp	x16, x17, [sp, #128]
    12ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    12b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    12b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    12b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    12bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    12c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    12c4:	d5384020 	mrs	x0, elr_el1
    12c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    12cc:	910003e0 	mov	x0, sp
    12d0:	97fffb82 	bl	d8 <current_elx_irq>
    12d4:	14000141 	b	17d8 <__restore_context>
	...
    1300:	d50343df 	msr	daifset, #0x3
    1304:	d10403ff 	sub	sp, sp, #0x100
    1308:	a90007e0 	stp	x0, x1, [sp]
    130c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1310:	a90217e4 	stp	x4, x5, [sp, #32]
    1314:	a9031fe6 	stp	x6, x7, [sp, #48]
    1318:	a90427e8 	stp	x8, x9, [sp, #64]
    131c:	a9052fea 	stp	x10, x11, [sp, #80]
    1320:	a90637ec 	stp	x12, x13, [sp, #96]
    1324:	a9073fee 	stp	x14, x15, [sp, #112]
    1328:	a90847f0 	stp	x16, x17, [sp, #128]
    132c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1330:	a90a57f4 	stp	x20, x21, [sp, #160]
    1334:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1338:	a90c67f8 	stp	x24, x25, [sp, #192]
    133c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1340:	a90e77fc 	stp	x28, x29, [sp, #224]
    1344:	d5384020 	mrs	x0, elr_el1
    1348:	a90f7be0 	stp	x0, x30, [sp, #240]
    134c:	910003e0 	mov	x0, sp
    1350:	97fffb6e 	bl	108 <current_elx_fiq>
    1354:	14000121 	b	17d8 <__restore_context>
	...
    1380:	d50343df 	msr	daifset, #0x3
    1384:	d10403ff 	sub	sp, sp, #0x100
    1388:	a90007e0 	stp	x0, x1, [sp]
    138c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1390:	a90217e4 	stp	x4, x5, [sp, #32]
    1394:	a9031fe6 	stp	x6, x7, [sp, #48]
    1398:	a90427e8 	stp	x8, x9, [sp, #64]
    139c:	a9052fea 	stp	x10, x11, [sp, #80]
    13a0:	a90637ec 	stp	x12, x13, [sp, #96]
    13a4:	a9073fee 	stp	x14, x15, [sp, #112]
    13a8:	a90847f0 	stp	x16, x17, [sp, #128]
    13ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    13b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    13b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    13b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    13bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    13c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    13c4:	d5384020 	mrs	x0, elr_el1
    13c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    13cc:	910003e0 	mov	x0, sp
    13d0:	97fffb60 	bl	150 <current_elx_serror>
    13d4:	14000101 	b	17d8 <__restore_context>
	...
    1400:	d50343df 	msr	daifset, #0x3
    1404:	d10403ff 	sub	sp, sp, #0x100
    1408:	a90007e0 	stp	x0, x1, [sp]
    140c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1410:	a90217e4 	stp	x4, x5, [sp, #32]
    1414:	a9031fe6 	stp	x6, x7, [sp, #48]
    1418:	a90427e8 	stp	x8, x9, [sp, #64]
    141c:	a9052fea 	stp	x10, x11, [sp, #80]
    1420:	a90637ec 	stp	x12, x13, [sp, #96]
    1424:	a9073fee 	stp	x14, x15, [sp, #112]
    1428:	a90847f0 	stp	x16, x17, [sp, #128]
    142c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1430:	a90a57f4 	stp	x20, x21, [sp, #160]
    1434:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1438:	a90c67f8 	stp	x24, x25, [sp, #192]
    143c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1440:	a90e77fc 	stp	x28, x29, [sp, #224]
    1444:	d5384020 	mrs	x0, elr_el1
    1448:	a90f7be0 	stp	x0, x30, [sp, #240]
    144c:	910003e0 	mov	x0, sp
    1450:	97fffb42 	bl	158 <lower_aarch64_synchronous>
    1454:	140000e1 	b	17d8 <__restore_context>
	...
    1480:	d50343df 	msr	daifset, #0x3
    1484:	d10403ff 	sub	sp, sp, #0x100
    1488:	a90007e0 	stp	x0, x1, [sp]
    148c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1490:	a90217e4 	stp	x4, x5, [sp, #32]
    1494:	a9031fe6 	stp	x6, x7, [sp, #48]
    1498:	a90427e8 	stp	x8, x9, [sp, #64]
    149c:	a9052fea 	stp	x10, x11, [sp, #80]
    14a0:	a90637ec 	stp	x12, x13, [sp, #96]
    14a4:	a9073fee 	stp	x14, x15, [sp, #112]
    14a8:	a90847f0 	stp	x16, x17, [sp, #128]
    14ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    14b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    14b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    14b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    14bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    14c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    14c4:	d5384020 	mrs	x0, elr_el1
    14c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    14cc:	910003e0 	mov	x0, sp
    14d0:	97fffb10 	bl	110 <lower_aarch64_irq>
    14d4:	140000c1 	b	17d8 <__restore_context>
	...
    1500:	d50343df 	msr	daifset, #0x3
    1504:	d10403ff 	sub	sp, sp, #0x100
    1508:	a90007e0 	stp	x0, x1, [sp]
    150c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1510:	a90217e4 	stp	x4, x5, [sp, #32]
    1514:	a9031fe6 	stp	x6, x7, [sp, #48]
    1518:	a90427e8 	stp	x8, x9, [sp, #64]
    151c:	a9052fea 	stp	x10, x11, [sp, #80]
    1520:	a90637ec 	stp	x12, x13, [sp, #96]
    1524:	a9073fee 	stp	x14, x15, [sp, #112]
    1528:	a90847f0 	stp	x16, x17, [sp, #128]
    152c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1530:	a90a57f4 	stp	x20, x21, [sp, #160]
    1534:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1538:	a90c67f8 	stp	x24, x25, [sp, #192]
    153c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1540:	a90e77fc 	stp	x28, x29, [sp, #224]
    1544:	d5384020 	mrs	x0, elr_el1
    1548:	a90f7be0 	stp	x0, x30, [sp, #240]
    154c:	910003e0 	mov	x0, sp
    1550:	97fffaf4 	bl	120 <lower_aarch64_fiq>
    1554:	140000a1 	b	17d8 <__restore_context>
	...
    1580:	d50343df 	msr	daifset, #0x3
    1584:	d10403ff 	sub	sp, sp, #0x100
    1588:	a90007e0 	stp	x0, x1, [sp]
    158c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1590:	a90217e4 	stp	x4, x5, [sp, #32]
    1594:	a9031fe6 	stp	x6, x7, [sp, #48]
    1598:	a90427e8 	stp	x8, x9, [sp, #64]
    159c:	a9052fea 	stp	x10, x11, [sp, #80]
    15a0:	a90637ec 	stp	x12, x13, [sp, #96]
    15a4:	a9073fee 	stp	x14, x15, [sp, #112]
    15a8:	a90847f0 	stp	x16, x17, [sp, #128]
    15ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    15b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    15b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    15b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    15bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    15c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    15c4:	d5384020 	mrs	x0, elr_el1
    15c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    15cc:	910003e0 	mov	x0, sp
    15d0:	97fffae4 	bl	160 <lower_aarch64_serror>
    15d4:	14000081 	b	17d8 <__restore_context>
	...
    1600:	d50343df 	msr	daifset, #0x3
    1604:	d10403ff 	sub	sp, sp, #0x100
    1608:	a90007e0 	stp	x0, x1, [sp]
    160c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1610:	a90217e4 	stp	x4, x5, [sp, #32]
    1614:	a9031fe6 	stp	x6, x7, [sp, #48]
    1618:	a90427e8 	stp	x8, x9, [sp, #64]
    161c:	a9052fea 	stp	x10, x11, [sp, #80]
    1620:	a90637ec 	stp	x12, x13, [sp, #96]
    1624:	a9073fee 	stp	x14, x15, [sp, #112]
    1628:	a90847f0 	stp	x16, x17, [sp, #128]
    162c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1630:	a90a57f4 	stp	x20, x21, [sp, #160]
    1634:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1638:	a90c67f8 	stp	x24, x25, [sp, #192]
    163c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1640:	a90e77fc 	stp	x28, x29, [sp, #224]
    1644:	d5384020 	mrs	x0, elr_el1
    1648:	a90f7be0 	stp	x0, x30, [sp, #240]
    164c:	910003e0 	mov	x0, sp
    1650:	97fffac6 	bl	168 <lower_aarch32_synchronous>
    1654:	14000061 	b	17d8 <__restore_context>
	...
    1680:	d50343df 	msr	daifset, #0x3
    1684:	d10403ff 	sub	sp, sp, #0x100
    1688:	a90007e0 	stp	x0, x1, [sp]
    168c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1690:	a90217e4 	stp	x4, x5, [sp, #32]
    1694:	a9031fe6 	stp	x6, x7, [sp, #48]
    1698:	a90427e8 	stp	x8, x9, [sp, #64]
    169c:	a9052fea 	stp	x10, x11, [sp, #80]
    16a0:	a90637ec 	stp	x12, x13, [sp, #96]
    16a4:	a9073fee 	stp	x14, x15, [sp, #112]
    16a8:	a90847f0 	stp	x16, x17, [sp, #128]
    16ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    16b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    16b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    16b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    16bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    16c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    16c4:	d5384020 	mrs	x0, elr_el1
    16c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    16cc:	910003e0 	mov	x0, sp
    16d0:	97fffa96 	bl	128 <lower_aarch32_irq>
    16d4:	14000041 	b	17d8 <__restore_context>
	...
    1700:	d50343df 	msr	daifset, #0x3
    1704:	d10403ff 	sub	sp, sp, #0x100
    1708:	a90007e0 	stp	x0, x1, [sp]
    170c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1710:	a90217e4 	stp	x4, x5, [sp, #32]
    1714:	a9031fe6 	stp	x6, x7, [sp, #48]
    1718:	a90427e8 	stp	x8, x9, [sp, #64]
    171c:	a9052fea 	stp	x10, x11, [sp, #80]
    1720:	a90637ec 	stp	x12, x13, [sp, #96]
    1724:	a9073fee 	stp	x14, x15, [sp, #112]
    1728:	a90847f0 	stp	x16, x17, [sp, #128]
    172c:	a9094ff2 	stp	x18, x19, [sp, #144]
    1730:	a90a57f4 	stp	x20, x21, [sp, #160]
    1734:	a90b5ff6 	stp	x22, x23, [sp, #176]
    1738:	a90c67f8 	stp	x24, x25, [sp, #192]
    173c:	a90d6ffa 	stp	x26, x27, [sp, #208]
    1740:	a90e77fc 	stp	x28, x29, [sp, #224]
    1744:	d5384020 	mrs	x0, elr_el1
    1748:	a90f7be0 	stp	x0, x30, [sp, #240]
    174c:	910003e0 	mov	x0, sp
    1750:	97fffa78 	bl	130 <lower_aarch32_fiq>
    1754:	14000021 	b	17d8 <__restore_context>
	...
    1780:	d50343df 	msr	daifset, #0x3
    1784:	d10403ff 	sub	sp, sp, #0x100
    1788:	a90007e0 	stp	x0, x1, [sp]
    178c:	a9010fe2 	stp	x2, x3, [sp, #16]
    1790:	a90217e4 	stp	x4, x5, [sp, #32]
    1794:	a9031fe6 	stp	x6, x7, [sp, #48]
    1798:	a90427e8 	stp	x8, x9, [sp, #64]
    179c:	a9052fea 	stp	x10, x11, [sp, #80]
    17a0:	a90637ec 	stp	x12, x13, [sp, #96]
    17a4:	a9073fee 	stp	x14, x15, [sp, #112]
    17a8:	a90847f0 	stp	x16, x17, [sp, #128]
    17ac:	a9094ff2 	stp	x18, x19, [sp, #144]
    17b0:	a90a57f4 	stp	x20, x21, [sp, #160]
    17b4:	a90b5ff6 	stp	x22, x23, [sp, #176]
    17b8:	a90c67f8 	stp	x24, x25, [sp, #192]
    17bc:	a90d6ffa 	stp	x26, x27, [sp, #208]
    17c0:	a90e77fc 	stp	x28, x29, [sp, #224]
    17c4:	d5384020 	mrs	x0, elr_el1
    17c8:	a90f7be0 	stp	x0, x30, [sp, #240]
    17cc:	910003e0 	mov	x0, sp
    17d0:	97fffa68 	bl	170 <lower_aarch32_serror>
    17d4:	14000001 	b	17d8 <__restore_context>

00000000000017d8 <__restore_context>:
    17d8:	a94f7be0 	ldp	x0, x30, [sp, #240]
    17dc:	d5184020 	msr	elr_el1, x0
    17e0:	a94007e0 	ldp	x0, x1, [sp]
    17e4:	a9410fe2 	ldp	x2, x3, [sp, #16]
    17e8:	a94217e4 	ldp	x4, x5, [sp, #32]
    17ec:	a9431fe6 	ldp	x6, x7, [sp, #48]
    17f0:	a94427e8 	ldp	x8, x9, [sp, #64]
    17f4:	a9452fea 	ldp	x10, x11, [sp, #80]
    17f8:	a94637ec 	ldp	x12, x13, [sp, #96]
    17fc:	a9473fee 	ldp	x14, x15, [sp, #112]
    1800:	a94847f0 	ldp	x16, x17, [sp, #128]
    1804:	a9494ff2 	ldp	x18, x19, [sp, #144]
    1808:	a94a57f4 	ldp	x20, x21, [sp, #160]
    180c:	a94b5ff6 	ldp	x22, x23, [sp, #176]
    1810:	a94c67f8 	ldp	x24, x25, [sp, #192]
    1814:	a94d6ffa 	ldp	x26, x27, [sp, #208]
    1818:	a94e77fc 	ldp	x28, x29, [sp, #224]
    181c:	910403ff 	add	sp, sp, #0x100
    1820:	d50343ff 	msr	daifclr, #0x3
    1824:	d69f03e0 	eret
